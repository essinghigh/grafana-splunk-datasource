index=main sourcetype=access_combined  
| eval status_group = case(status>=500, "server_error", status>=400, "client_error", status>=300, "redirect", status>=200, "success", true(), "unknown")  
| eval is_error = if(status>=400, 1, 0)  
| bin _time span=1h  
| stats  
    count                 AS total_events,  
    sum(is_error)         AS error_events,  
    values(status_group)  AS all_status_groups  
  BY host, _time  
| eval  
    error_rate      = round( (error_events/NULLIF(total_events,0)) * 100, 2 ),  
    has_server_err  = if(match(all_status_groups, "server_error"), 1, 0),  
    has_client_err  = if(match(all_status_groups, "client_error"), 1, 0)  
| where total_events > 50  
| where error_rate > 1 OR has_server_err=1  
| lookup dnslookup clientip AS host OUTPUT clienthost AS dns_name  
| fillnull value="n/a" dns_name  
| sort - error_rate  
| eval alert_level =  
    case( error_rate>50,   "critical",  
          error_rate>20,   "high",  
          error_rate>5,    "medium",  
          error_rate>1,    "low",  
          true(),          "info" )  
| fields - all_status_groups  
| rename  
    host         AS hostname,  
    _time        AS hour_slot,  
    total_events AS events_total,  
    error_events AS events_error  
| table  
    hour_slot, hostname, dns_name, events_total, events_error, error_rate, alert_level  
| eval origin = coalesce(origin, "main_search")  
| sort hostname, - error_rate  
| dedup hostname  
| eventstats  
    avg(error_rate) AS avg_error_rate_by_host  
  BY hostname  
| eval  
    diff_from_avg = round(error_rate - avg_error_rate_by_host, 2),  
    summary = mvjoin( mvfilter(match(all_status_groups, ".*")), "," )  
| fields - all_status_groups  
| table  
    hostname, dns_name, hour_slot, events_total, events_error, error_rate, avg_error_rate_by_host, diff_from_avg, alert_level, summary, search, origin